#include <iostream>
#include <vector>
#include <algorithm>
#include <chrono>
#include <stack>
using namespace std;

using namespace std::chrono;

void mergeSort(vector<int>& vectorToSort)
{

    if (vectorToSort.size() < 2) {
        return;
    }


    size_t midIndex = vectorToSort.size() / 2;
    vector<int> left(vectorToSort.begin(), vectorToSort.begin() + midIndex);
    vector<int> right(vectorToSort.begin() + midIndex, vectorToSort.end());


    mergeSort(left);
    mergeSort(right);


    size_t il = 0;
    size_t ir = 0;

    for (size_t iv = 0; iv < vectorToSort.size();iv++) {

        if (il < left.size() && (ir >= right.size() || left[il] > right[ir])) {
            vectorToSort[iv] = left[il];
            ++il;
        }
        else
        {
            vectorToSort[iv] = right[ir];
            ++ir;
        }
    }
}
int main()
{
    
    vector<int> vec{ -1,-100,34,5,6,7,4,24,65,6,47,45,3,9,6,6545,4,35,4,3,5644,6,74,-999,64,767,5,43,65,65,4,3,0,0,0,0,67,6767,45,3,65,63,543,55,657,756,7657,676,545,645654,656,565,6,6,45,46,6,7,67,767,767,67,676,767,676,7676,76,456534,543654,65745,4366,765,54765,745,-10000, 8,1,4,5,39,5,3,5,6,2,45,64,5,3,654,3,64,33,56,3,35,3,2,6,6,32222,43,544,535,3424, -1,-100,34,5,6,7,4,24,65,6,47,45,3,9,6,6545,4,35,4,3,5644,6,74,-999,64,767,5,43,65,65,4,3,0,0,0,0,67,6767,45,3,65,63,543,55,657,756,7657,676,545,645654,656,565,6,6,45,46,6,7,67,767,767,67,676,767,676,7676,76,456534,543654,65745,4366,765,54765,745,-10000, 8,1,4,5,39,5,3,5,6,2,45,64,5,3,654,3,64,33,56,3,35,3,2,6,6,32222,43,544,535,3424, -1,-100,34,5,6,7,4,24,65,6,47,45,3,9,6,6545,4,35,4,3,5644,6,74,-999,64,767,5,43,65,65,4,3,0,0,0,0,67,6767,45,3,65,63,543,55,657,756,7657,676,545,645654,656,565,6,6,45,46,6,7,67,767,767,67,676,767,676,7676,76,456534,543654,65745,4366,765,54765,745,-10000, 8,1,4,5,39,5,3,5,6,2,45,64,5,3,654,3,64,33,56,3,35,3,2,6,6,32222,43,544,535,3424, -1,-100,34,5,6,7,4,24,65,6,47,45,3,9,6,6545,4,35,4,3,5644,6,74,-999,64,767,5,43,65,65,4,3,0,0,0,0,67,6767,45,3,65,63,543,55,657,756,7657,676,545,645654,656,565,6,6,45,46,6,7,67,767,767,67,676,767,676,7676,76,456534,543654,65745,4366,765,54765,745,-10000, 8,1,4,5,39,5,3,5,6,2,45,64,5,3,654,3,64,33,56,3,35,3,2,6,6,32222,43,544,535,3424 };
    auto t0 = high_resolution_clock::now();
       mergeSort(vec);
    auto t1 = high_resolution_clock::now();
    for_each(vec.begin(), vec.end(), [](auto item) {cout << item << endl;});
   
    cout << duration_cast<milliseconds>(t1 - t0).count() << " milliseconds passed in mergesort\n";
 
    int wait;
    cin >> wait;

    
}